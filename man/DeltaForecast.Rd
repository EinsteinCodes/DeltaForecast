% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_processing.R
\name{DeltaForecast}
\alias{DeltaForecast}
\title{Estimate the impact on an event using time-series forecasting}
\usage{
DeltaForecast(
  data = NULL,
  path = NULL,
  event,
  temporal_col = "date",
  target_col = "target",
  origin = as.Date("2022-01-01"),
  frequency = "D",
  horizon = 10,
  val_pct = 0.2,
  include_engines = c(),
  exclude_engines = c(),
  ensembles = c(),
  seasonality = c()
)
}
\arguments{
\item{data}{Optional argument (must be provided if 'path' is null) specifying
a pre-loaded dataframe to be processed. If specified, 'path' will
be ignored. The provided tibble will be checked and the relevant
columns will be filtered.}

\item{path}{Optional argument(must be provided if 'data' is null) specifying
a path to a CSV file. Will be ignored unless 'data' is null. The
provided CSV file will be read, and the data will be checked and
filtered.}

\item{event}{The event of interest. Should be of type 'Date' or 'numeric'. If 'numeric', it 
will be added to the 'origin' to return a 'Date'.}

\item{temporal_col}{A string representing the ccolumn in the time-series dataset storing the
time.}

\item{target_col}{A string representing the column in the time-series dataset storing the
response variable (the value that you expect to change after some event)}

\item{origin}{Optional argument specifying the time of the earliest
observation recorded in the dataset. This parameter will only
be used if the temporal column of the dataset is 'numeric'
instead of 'Date'.}

\item{frequency}{The unit of time that consecutive rows represent. Possible  values are:
D (day), W (week), M (month), h (hour), m (minute), s (second).}

\item{horizon}{How far into the future you wish to observe for each event. For instance, if
you have a time-series with daily frequency, a horizon of 10 means that
DeltaForecast will forecast 10 days after the event and compare the difference
between the observed data and the forecast.}

\item{val_pct}{A number between 0 and 1, representing the proportion of the data to be used to
evaluate the performance of each models. Can be useful for the user to see how 
reliable the forecasts are, and are needed to generate a rank ensemble based on 
the validation scores.}

\item{include_engines}{A vector containing names of parsnip engines to build models around and 
train. If specified, 'exclude_engines' will be ignored. To specify every 
available engine, pass in an empty vector for both parameters.}

\item{exclude_engines}{A vector containing names of parsnip engines to NOT build models around.
will only be considered if include_engines is empty. Every available
engine besides those specified here will be built and trained. If found
empty alongside 'include_engines', all available engines will be built.}

\item{ensembles}{A vector containing one, none or multiple of the following types of model
ensembles: 'mean' (averages all built models together), 'median' (takes the
median of all built models, and 'rank' (takes the weighted average of all models,
assigning the highest weight to the best performing model on the validation set)}

\item{seasonality}{A vector storing any seasonalities the dataset exhibits. Can be one, none or
multiple of: 'daily', 'weekly' or 'yearly''}
}
\value{
(for now) A tibble storing the forecast generated by each model and including the 
                  ensembles.
}
\description{
Estimate the impact on an event using time-series forecasting
}
